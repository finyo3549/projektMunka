<!--  TopicPage XAML begins here, defining a user interface for topic management in a MagicQuizDesktop application  -->
<Page
    x:Class="MagicQuizDesktop.View.Pages.TopicPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mw="clr-namespace:MagicQuizDesktop.ViewModels"
    Title="TopicPage"
    d:DesignHeight="600"
    d:DesignWidth="1000"
    FontFamily="{DynamicResource IrishGroverFont}"
    mc:Ignorable="d">

    <!--  The ViewModel for this page is commented out but typically sets the data context for data binding  -->
    <!--<Page.DataContext>
        <mw:TopicViewModel/>
    </Page.DataContext>-->

    <!--  Main layout container  -->
    <Grid>

        <!--  Row definitions for layout structuring  -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  Top section for user input and buttons  -->
        <WrapPanel
            Margin="10,5,0,20"
            HorizontalAlignment="Left"
            VerticalAlignment="Top"
            Orientation="Horizontal">

            <!--  Search text box with property binding for dynamic UI updates  -->
            <TextBox
                Width="200"
                Height="25"
                Margin="0,0,20,10"
                VerticalAlignment="Center"
                materialDesign:HintAssist.Hint="Keresés név alapján"
                FontSize="18"
                Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" />

            <!--  Search button with command binding and custom style  -->
            <Button
                x:Name="BtnSearch"
                Margin="0,0,20,10"
                BorderThickness="0"
                Command="{Binding SearchCommand}"
                Content="Keresés"
                Cursor="Hand"
                FontSize="13"
                Foreground="White">
                <!--  Button styling for normal and mouse-over states  -->
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="#28AEED" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#0A46A0" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <!--  Custom button template  -->
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Width="80"
                            Height="30"
                            Background="{TemplateBinding Background}"
                            CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <!--  Button to open a new topic, styled similarly to the search button  -->
            <Button
                x:Name="BtnNewQuestion"
                Margin="0,0,30,10"
                BorderThickness="0"
                Command="{Binding OpenNewTopicWindowCommand}"
                Content="Új téma"
                Cursor="Hand"
                FontFamily="Montserrat"
                FontSize="13"
                Foreground="White">

                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Background" Value="CadetBlue" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#07F3C0" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Width="80"
                            Height="30"
                            Background="{TemplateBinding Background}"
                            CornerRadius="15">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <!--  Text block for displaying messages, bound to ViewModel properties  -->
            <TextBlock
                MaxWidth="350"
                Margin="0,0,0,0"
                FontSize="13"
                FontWeight="Medium"
                Foreground="{Binding Message.MessageColor}"
                Text="{Binding Message.MessageText}"
                TextWrapping="Wrap" />
        </WrapPanel>

        <!--  Scrollable area for listing topics  -->
        <ScrollViewer
            Grid.Row="1"
            VerticalAlignment="Center"
            HorizontalScrollBarVisibility="Disabled"
            VerticalScrollBarVisibility="Auto">

            <!--  Control that binds to a list of filtered topics  -->
            <ItemsControl ItemsSource="{Binding FilteredTopics}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>

                        <!--  Card for each topic with interaction triggers  -->
                        <materialDesign:Card
                            MaxWidth="1000"
                            MaxHeight="220"
                            Margin="10"
                            Padding="5"
                            Background="{DynamicResource color1}"
                            Cursor="Hand">
                            <!--  Text block for displaying the name of the topic, bound to ViewModel properties  -->
                            <TextBlock
                                VerticalAlignment="Center"
                                FontSize="30"
                                Text="{Binding TopicName}"
                                TextAlignment="Center"
                                TextWrapping="Wrap" />

                            <!--  Triggers to handle mouse clicks, invoking commands on click  -->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseLeftButtonDown">
                                    <i:InvokeCommandAction Command="{Binding DataContext.OpenTopicWindowCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}" CommandParameter="{Binding}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                        </materialDesign:Card>

                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>
    </Grid>
</Page>
